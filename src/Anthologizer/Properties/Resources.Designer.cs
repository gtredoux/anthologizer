//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.renoster.Anthologizer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("com.renoster.Anthologizer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad path .
        /// </summary>
        internal static string AnthologizerService_Absolute_Bad_path_ {
            get {
                return ResourceManager.GetString("AnthologizerService_Absolute_Bad_path_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not anthologize.
        /// </summary>
        internal static string AnthologizerService_Anthologize_Could_not_anthologize {
            get {
                return ResourceManager.GetString("AnthologizerService_Anthologize_Could_not_anthologize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get atom.
        /// </summary>
        internal static string AnthologizerService_GetAtomic_Could_not_get_atom {
            get {
                return ResourceManager.GetString("AnthologizerService_GetAtomic_Could_not_get_atom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get composite.
        /// </summary>
        internal static string AnthologizerService_GetComposite_Could_not_get_composite {
            get {
                return ResourceManager.GetString("AnthologizerService_GetComposite_Could_not_get_composite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid path.
        /// </summary>
        internal static string AnthologizerService_tryGetAtomic_Invalid_path {
            get {
                return ResourceManager.GetString("AnthologizerService_tryGetAtomic_Invalid_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such atom.
        /// </summary>
        internal static string AnthologizerService_tryGetAtomic_No_such_atom {
            get {
                return ResourceManager.GetString("AnthologizerService_tryGetAtomic_No_such_atom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid path.
        /// </summary>
        internal static string AnthologizerService_tryGetComposite_Invalid_path {
            get {
                return ResourceManager.GetString("AnthologizerService_tryGetComposite_Invalid_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such path.
        /// </summary>
        internal static string AnthologizerService_tryGetComposite_No_such_path {
            get {
                return ResourceManager.GetString("AnthologizerService_tryGetComposite_No_such_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not unanthologize .
        /// </summary>
        internal static string AnthologizerService_UnAnthologize_Could_not_unanthologize_ {
            get {
                return ResourceManager.GetString("AnthologizerService_UnAnthologize_Could_not_unanthologize_", resourceCulture);
            }
        }
    }
}
